# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: organizationl
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: restapitest
# "service" is the name of this project. This will also be added to your AWS resource names.
service: RestAPITest

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"

plugins:
  - serverless-wsgi
  - serverless-python-requirements

custom:
  wsgi:
    app: app.app
  tableName: "UsersTable"

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/UsersTable
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: user
          method: post
  getUserById:
    handler: handler.getUserById
    events:
      - http:
          path: user/{id}
          method: get
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

